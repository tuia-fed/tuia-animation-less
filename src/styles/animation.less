// // 呼吸效果
.breathe(@scaleNum: 0.95, @duration: 0.7s, @timing-function: ease-in, @iteration-count: infinite) {
  .breatheframe(~`'tuia-breathe_'+Math.round(Math.random() * 1.0e8)`);
}
.breatheframe(@name) {
  @keyframes @name {
    0%,
    100% {
      transform: scale(1);
    }

    50% {
      transform: scale(@scaleNum);
    }
  }

  animation-name: @name;
  animation-duration: @duration;
  animation-timing-function: @timing-function;
  animation-iteration-count: @iteration-count;
}

// 旋转
.rotate(@duration: 9s, @timing-function: linear, @delay: 0.1s, @iteration-count: infinite, @direction: normal, @fill-mode: none) {
  .rotateframe(~`'tuia-rotate_'+Math.round(Math.random() * 1.0e8)`)
}
.rotateframe(@name) {
  animation: @name @duration @timing-function @delay @iteration-count @direction @fill-mode;

  @keyframes @name {
    0% {
      transform: rotate(0deg);
    }

    100% {
      transform: rotate(360deg);
    }
  }
}

// 抖动
.shake(@duration: 0.8s, @timing-function: ease-out, @delay: 0s, @iteration-count: infinite, @direction: normal, @fill-mode: none) {
  .shakeframe(~`'tuia-shake_'+Math.round(Math.random() * 1.0e8)`)
}
.shakeframe(@name) {
  @keyframes @name {
    from,
    80% {
      transform: rotate(0);
    }

    20% {
      transform: rotate(6deg);
    }

    45% {
      transform: rotate(-4deg);
    }

    60% {
      transform: rotate(2deg);
    }
  }
  animation: @name @duration @timing-function @delay @iteration-count @direction @fill-mode;
}

.shakeHurried(@duration: 0.6s, @timing-function: linear, @delay: 0.3s, @iteration-count: infinite, @direction: alternate, @fill-mode: none) {
  .shakeHurriedFrame(~`'tuia-shake_'+Math.round(Math.random() * 1.0e8)`);
}
.shakeHurriedFrame(@name) {
  @keyframes @name {
    0%,
    to {
      transform: translateZ(0);
    }

    10%,
    20% {
      transform: rotate(-3deg) translateZ(0);
    }

    30%,
    50%,
    70%,
    90% {
      transform: rotate(3deg) translateZ(0);
    }

    40%,
    60%,
    80% {
      transform: rotate(-3deg) translateZ(0);
    }
  }
  animation: @name @duration @timing-function @delay @iteration-count @direction @fill-mode;
}
// 淡入
.fadeIn(@duration: 0.2s) {
  .fadeInFrame(~`'tuia-fadeIn_'+Math.round(Math.random() * 1.0e8)`)
}
.fadeInFrame(@name) {
  @keyframes @name {
    0% {
      opacity: 0;
    }

    100% {
      opacity: 1;
    }
  }
  animation-name:@name;
  animation-duration:@duration;
  animation-fill-mode:forwards;
}
// 淡出
.fadeOut(@duration: 0.4s) {
  .fadeOutFrame(~`'tuia-fadeOut_'+Math.round(Math.random() * 1.0e8)`)
}
.fadeOutFrame(@name) {
  @keyframes @name {
    0% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }
  animation-name:@name;
  animation-duration:@duration;
  animation-fill-mode:forwards;
}
// 挥动
.wave(@duration: 0.6s, @fromRotate: 0, @toRotate: 30deg) {
  pointer-events: none;
  background-repeat: no-repeat;
  background-size: contain;
  transform-origin: 100% 100%;
  .waveAniFrame(~`'tuia-wave_'+Math.round(Math.random() * 1.0e8)`);
}
.waveAniFrame(@name) {
  animation: @name @duration infinite;
  @keyframes @name {
    0%,
    40%,
    80%,
    100% {
      transform: rotate(@fromRotate);
    }

    20%,
    60% {
      transform: rotate(@toRotate);
    }
  }
}
// 位移
.move_y(@from: 100%, @to: 0, @duration: 0.3s, @timing-function: ease, @delay: 0, @iteration-count: forwards) {
  .moveYFrame(~`'tuia-move_y_'+Math.round(Math.random() * 1.0e8)`);
}
.moveYFrame(@name) {
  animation: @name @duration @timing-function @iteration-count;
  @keyframes @name {
    0% {
      transform: translateY(@from)
    }

    100% {
      transform: translateY(@to);
    }
  }
}
.move_x(@from: 0, @to: 100%, @duration: 0.3s, @timing-function: ease, @delay: 0, @iteration-count: forwards) {
  .moveXFrame(~`'tuia-move_x_'+Math.round(Math.random() * 1.0e8)`);
}
.moveXFrame(@name) {
  animation: @name @duration @timing-function @iteration-count;
  @keyframes @name {
    0% {
      transform: translateX(@from)
    }

    100% {
      transform: translateX(@to);
    }
  }
}
.bounce() {
  .bounceFrame(~`'tuia-bounce_'+Math.round(Math.random() * 1.0e8)`);
}
.bounceFrame(@name) {
  animation-name: @name;
  -webkit-transform-origin: center bottom;
  transform-origin: center bottom;
  @keyframes @name {
    from,
    20%,
    53%,
    to {
      -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      -webkit-transform: translate3d(0, 0, 0);
      transform: translate3d(0, 0, 0);
    }
  
    40%,
    43% {
      -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      -webkit-transform: translate3d(0, -30px, 0) scaleY(1.1);
      transform: translate3d(0, -30px, 0) scaleY(1.1);
    }
  
    70% {
      -webkit-animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      animation-timing-function: cubic-bezier(0.755, 0.05, 0.855, 0.06);
      -webkit-transform: translate3d(0, -15px, 0) scaleY(1.05);
      transform: translate3d(0, -15px, 0) scaleY(1.05);
    }
  
    80% {
      -webkit-transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
      -webkit-transform: translate3d(0, 0, 0) scaleY(0.95);
      transform: translate3d(0, 0, 0) scaleY(0.95);
    }
  
    90% {
      -webkit-transform: translate3d(0, -4px, 0) scaleY(1.02);
      transform: translate3d(0, -4px, 0) scaleY(1.02);
    }
  }
}